{"version":3,"sources":["App/slices/api.js","App/slices/conversionsSlice.js","App/slices/dictSlice.js","App/rootReducer.js","App/store.js","App/Currencies/Dropdown.js","App/Currencies/CurrencyDropdown.js","App/Currencies/AddCalculationModal.js","App/Currencies/DataTable.js","App/Currencies/Filters.js","App/Currencies/index.js","App/Currencies/CurrenciesView.js","App/App.js","App/index.js","reportWebVitals.js","index.js"],"names":["baseUrl","fetchDictionary","a","fetch","response","json","conversions","add","from","to","amount","method","body","JSON","stringify","from_currency","to_currency","save","updated","deleted","extractKeys","obj","keys","reduce","acc","key","loadConversions","createAsyncThunk","addConversion","dispatch","rejectWithValue","result","success","newRow","actions","addRow","message","saveConversions","unused","getState","data","updatedConversionsSelector","state","row","push","Object","ConversionRowState","console","log","REMOVED","UPDATED","forEach","id","updateRow","track","NEW","createSlice","initialState","name","reducers","action","payload","map","undefined","removeRow","extraReducers","fulfilled","_","reducer","conversionsSelector","visibleConversionsSelector","createSelector","filter","loadDict","header","entries","k","v","dictSelector","dict","combineReducers","store","configureStore","rootReducer","Dropdown","other","TextField","select","MenuItem","value","CurrencyDropdown","props","useSelector","AddCalculationModal","onClose","useDispatch","React","useState","loading","setLoading","error","setError","params","setParams","handleAdd","useCallback","handleChange","e","target","Dialog","open","fullWidth","DialogTitle","DialogContent","DialogContentText","color","Grid","container","spacing","item","xs","label","onChange","type","DialogActions","Button","onClick","disabled","CircularProgress","size","DataRow","getIsChecked","converted","date_added","TableRow","TableCell","Checkbox","checked","isoLikeParse","str","date","parse","Date","isValid","DataTable","filters","rawData","useMemo","compiledFilters","leftDate","fromFilter","compareAsc","startOfDay","rightDate","endOfDay","every","Box","mt","flexGrow","Paper","Table","width","TableHead","TableBody","Filters","p","clone","sm","Typography","variant","date_added_from","date_added_to","CurrenciesView","useEffect","doLoading","setFilters","handleFilterChange","selectedRows","setSelectedRows","handleGetIsChecked","findIndex","_id","modalOpen","setModalOpen","openModal","closeModal","handleRemove","conversionsActions","handleDataChange","column","rowId","handleSave","hasChanges","length","justify","App","CssBaseline","Container","Currencies","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e0090f.chunk.js","sourcesContent":["const baseUrl = \"/testcase\";\n\nexport const fetchDictionary = async () => {\n  const response = await fetch(`${baseUrl}/currencyNsi.php`);\n\n  return response.json();\n};\n\nexport const dictionary = {\n  fetch: fetchDictionary,\n};\n\nconst fetchConversions = async () => {\n  const response = await fetch(`${baseUrl}/list.php`);\n\n  return response.json();\n};\n\nconst addConversion = async (from, to, amount) => {\n  const response = await fetch(`${baseUrl}/add.php`, {\n    method: \"POST\",\n    body: JSON.stringify({ from_currency: from, to_currency: to, amount }),\n  });\n\n  return response.json();\n};\n\nconst saveConversion = async (updated = [], deleted = []) => {\n  const response = await fetch(`${baseUrl}/update.php`, {\n    method: \"POST\",\n    body: JSON.stringify({ deleted, updated }),\n  });\n\n  return response.json();\n};\n\nexport const conversions = {\n  fetch: fetchConversions,\n  add: addConversion,\n  save: saveConversion,\n};\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport { conversions } from \"./api\";\n\nconst extractKeys = (obj, keys) =>\n  keys.reduce((acc, key) => {\n    acc[key] = obj[key];\n    return acc;\n  }, {});\n\nexport const loadConversions = createAsyncThunk(\n  \"conversions/load\",\n  async () => {\n    return await conversions.fetch();\n  }\n);\n\nexport const addConversion = createAsyncThunk(\n  \"conversions/add\",\n  async ({ from, to, amount }, { dispatch, rejectWithValue }) => {\n    const result = await conversions.add(from, to, amount);\n    const { success } = result;\n\n    if (success) {\n      const newRow = extractKeys(result, [\n        \"amount\",\n        \"converted\",\n        \"course\",\n        \"date_added\",\n        \"from_currency\",\n        \"id\",\n        \"to_currency\",\n      ]);\n\n      dispatch(actions.addRow(newRow));\n    } else {\n      return rejectWithValue(result.message);\n    }\n  }\n);\n\nexport const saveConversions = createAsyncThunk(\n  \"conversions/save\",\n  async (unused, { dispatch, getState, rejectWithValue }) => {\n    const data = updatedConversionsSelector(getState());\n\n    const { REMOVED, UPDATED } = data.reduce(\n      (acc, { state, ...row }) => {\n        if (state) {\n          acc[state].push(row);\n        }\n\n        return acc;\n      },\n      Object.keys(ConversionRowState).reduce((acc, state) => {\n        acc[state] = [];\n        console.log(acc);\n        return acc;\n      }, {})\n    );\n\n    const result = await conversions.save(UPDATED, REMOVED);\n\n    if (result.success) {\n      result.updated.forEach(({ id, ...data }) =>\n        dispatch(\n          actions.updateRow({\n            id,\n            data,\n            track: false,\n          })\n        )\n      );\n    } else {\n      return rejectWithValue(result.message);\n    }\n  }\n);\n\nexport const ConversionRowState = {\n  NEW: \"NEW\",\n  UPDATED: \"UPDATED\",\n  REMOVED: \"REMOVED\",\n};\n\nexport const { actions, reducer } = createSlice({\n  initialState: [],\n  name: \"conversions\",\n  reducers: {\n    addRow: (state, action) => [\n      ...state,\n      { ...action.payload, state: ConversionRowState.NEW },\n    ],\n    updateRow: (state, action) => {\n      const { id, data, track = true } = action.payload;\n\n      return state.map((row) =>\n        row.id === id\n          ? {\n              ...row,\n              ...data,\n              state: track ? ConversionRowState.UPDATED : undefined,\n            }\n          : row\n      );\n    },\n    removeRow: (state, action) =>\n      state.map((row) =>\n        row.id === action.payload\n          ? { ...row, state: ConversionRowState.REMOVED }\n          : row\n      ),\n  },\n  extraReducers: {\n    [loadConversions.fulfilled]: (_, action) => action.payload,\n  },\n});\n\nexport const conversionsSelector = (state) => state.conversions;\n\nexport const visibleConversionsSelector = createSelector(\n  conversionsSelector,\n  (conversions) =>\n    conversions.filter((row) => row.state !== ConversionRowState.REMOVED)\n);\n\nexport const updatedConversionsSelector = createSelector(\n  conversionsSelector,\n  (conversions) =>\n    conversions.filter(\n      (row) =>\n        row.state === ConversionRowState.UPDATED ||\n        row.state === ConversionRowState.REMOVED\n    )\n);\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchDictionary } from \"./api\";\n\nexport const loadDict = createAsyncThunk(\"dict/load\", async () => {\n  const { header, data } = await fetchDictionary();\n\n  return data.map((row) =>\n    Object.entries(header).reduce((acc, [k, v]) => {\n      acc[k] = row[v];\n\n      return acc;\n    }, {})\n  );\n});\n\nexport const { reducer } = createSlice({\n  initialState: [],\n  name: \"dict\",\n  extraReducers: {\n    [loadDict.fulfilled]: (state, action) => action.payload,\n  },\n});\n\nexport const dictSelector = (state) => state.dict;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { reducer as conversions } from \"./slices/conversionsSlice\";\nimport { reducer as dict } from \"./slices/dictSlice\";\n\nexport default combineReducers({\n  conversions,\n  dict,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import PropTypes from \"prop-types\";\nimport { MenuItem, TextField } from \"@material-ui/core\";\n\nconst Dropdown = ({ dict = [], ...other }) => {\n  return (\n    <TextField select {...other}>\n      <MenuItem value=\"\">...</MenuItem>\n      {dict.map(({ id, name }) => (\n        <MenuItem key={id} value={id}>\n          {name}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.any.isRequired,\n    })\n  ),\n};\n\nexport default Dropdown;\n","import { useSelector } from \"react-redux\";\nimport { dictSelector } from \"../slices/dictSlice\";\nimport Dropdown from \"./Dropdown\";\n\nconst CurrencyDropdown = (props) => {\n  const dict = useSelector(dictSelector);\n\n  return <Dropdown dict={dict} {...props} />;\n};\n\nexport default CurrencyDropdown;\n","import React from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nimport CurrencyDropdown from \"./CurrencyDropdown\";\nimport { useDispatch } from \"react-redux\";\nimport { addConversion } from \"../slices/conversionsSlice\";\n\nconst AddCalculationModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const [params, setParams] = React.useState({});\n\n  const handleAdd = React.useCallback(async () => {\n    setLoading(true);\n\n    const result = await dispatch(addConversion(params));\n\n    if (!result.error) {\n      onClose();\n    } else {\n      setError(result.payload);\n    }\n\n    setLoading(false);\n  }, [dispatch, onClose, params]);\n\n  const handleChange = React.useCallback(\n    (e) =>\n      setParams((params) => ({ ...params, [e.target.name]: e.target.value })),\n    []\n  );\n\n  return (\n    <Dialog open fullWidth>\n      <DialogTitle>Добавить расчёт</DialogTitle>\n      <DialogContent>\n        {error && (\n          <DialogContentText color=\"error\">\n            Произошла ошибка при добавлении: {error}\n          </DialogContentText>\n        )}\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <CurrencyDropdown\n              name=\"from\"\n              value={params.from}\n              label=\"Исходная валюта\"\n              onChange={handleChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <CurrencyDropdown\n              name=\"to\"\n              value={params.to}\n              onChange={handleChange}\n              label=\"Целевая валюта\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              type=\"number\"\n              name=\"amount\"\n              value={params.amount}\n              onChange={handleChange}\n              label=\"Исходное значение\"\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} disabled={loading}>\n          Отменить\n        </Button>\n        <Button onClick={handleAdd} disabled={loading} color=\"primary\">\n          Добавить\n          {loading && <CircularProgress size={14} />}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddCalculationModal;\n","import React from \"react\";\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { compareAsc, endOfDay, isValid, parse, startOfDay } from \"date-fns\";\nimport { visibleConversionsSelector } from \"../slices/conversionsSlice\";\nimport CurrencyDropdown from \"./CurrencyDropdown\";\n\nconst DataRow = ({ row, getIsChecked, onChange }) => {\n  const { from_currency, to_currency, amount, converted, date_added } = row;\n\n  const handleChange = React.useCallback(\n    (e) => {\n      onChange(row.id, e);\n    },\n    [row.id, onChange]\n  );\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Checkbox\n          name=\"selected\"\n          checked={getIsChecked(row.id)}\n          onChange={handleChange}\n        />\n      </TableCell>\n      <TableCell>\n        <CurrencyDropdown\n          name=\"from_currency\"\n          value={from_currency}\n          onChange={handleChange}\n          fullWidth\n        />\n      </TableCell>\n      <TableCell>\n        <CurrencyDropdown\n          name=\"to_currency\"\n          value={to_currency}\n          onChange={handleChange}\n          fullWidth\n        />\n      </TableCell>\n      <TableCell>\n        <TextField\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n          type=\"number\"\n          fullWidth\n        />\n      </TableCell>\n      <TableCell>{converted}</TableCell>\n      <TableCell>{date_added}</TableCell>\n    </TableRow>\n  );\n};\n\nconst isoLikeParse = (str) => {\n  let date;\n\n  date = parse(str, \"yyyy-MM-dd\", new Date());\n\n  if (!isValid(date)) {\n    date = parse(str, \"yyyy-MM-dd HH:mm:ss\", new Date());\n  }\n\n  return date;\n};\n\nconst DataTable = ({ filters, getIsChecked, onChange }) => {\n  const rawData = useSelector(visibleConversionsSelector);\n\n  const data = React.useMemo(() => {\n    const compiledFilters = Object.entries(filters).reduce(\n      (acc, [key, value]) => {\n        let filter = null;\n\n        if (value) {\n          switch (key) {\n            case \"date_added_from\":\n              filter = (data) => {\n                const leftDate = isoLikeParse(data[\"date_added\"]);\n                const fromFilter = isoLikeParse(value);\n\n                return leftDate\n                  ? compareAsc(leftDate, startOfDay(fromFilter)) >= 0\n                  : false;\n              };\n              break;\n            case \"date_added_to\":\n              filter = (data) => {\n                const rightDate = isoLikeParse(data[\"date_added\"]);\n                const fromFilter = isoLikeParse(value);\n\n                return rightDate\n                  ? compareAsc(endOfDay(fromFilter), rightDate) >= 0\n                  : false;\n              };\n              break;\n            default:\n              filter = (data) => data[key] === value;\n          }\n        }\n\n        if (filter) {\n          acc.push(filter);\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    return rawData.filter((row) =>\n      compiledFilters.every((filter) => filter(row))\n    );\n  }, [filters, rawData]);\n\n  return (\n    <Box mt={2} flexGrow={1}>\n      <Paper>\n        <Table>\n          <colgroup>\n            <col width=\"24px\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n            <col width=\"20%\" />\n          </colgroup>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Исходная валюта</TableCell>\n              <TableCell>Целевая валюта</TableCell>\n              <TableCell>Исходное значение</TableCell>\n              <TableCell>Целевое значение</TableCell>\n              <TableCell>Дата конвертации</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <DataRow\n                key={row.id}\n                row={row}\n                getIsChecked={getIsChecked}\n                onChange={onChange}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default DataTable;\n","import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport CurrencyDropdown from \"./CurrencyDropdown\";\n\nconst Filters = ({ data, onChange }) => {\n  return (\n    <Box mt={2} p={2} clone>\n      <Paper>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">Валюта</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <CurrencyDropdown\n                  name=\"from_currency\"\n                  value={data.from_currency}\n                  label=\"Исходная\"\n                  onChange={onChange}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <CurrencyDropdown\n                  name=\"to_currency\"\n                  value={data.to_currency}\n                  onChange={onChange}\n                  label=\"Целевая\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">Дата конвертациии</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <TextField\n                  value={data.date_added_from}\n                  onChange={onChange}\n                  name=\"date_added_from\"\n                  label=\"с\"\n                  type=\"date\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  value={data.date_added_to}\n                  onChange={onChange}\n                  name=\"date_added_to\"\n                  label=\"по\"\n                  type=\"date\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Filters;\n","import { default as CurrenciesView } from \"./CurrenciesView\";\n\nexport default CurrenciesView;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadDict } from \"../slices/dictSlice\";\nimport { Box, Button, Grid, Paper } from \"@material-ui/core\";\nimport AddCalculationModal from \"./AddCalculationModal\";\nimport DataTable from \"./DataTable\";\nimport Filters from \"./Filters\";\nimport {\n  loadConversions,\n  actions as conversionsActions,\n  updatedConversionsSelector,\n  saveConversions,\n} from \"../slices/conversionsSlice\";\n\nconst CurrenciesView = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const doLoading = async () => {\n      await dispatch(loadDict());\n      await dispatch(loadConversions());\n    };\n\n    doLoading();\n  }, [dispatch]);\n\n  const [filters, setFilters] = React.useState({\n    from_currency: \"\",\n    to_currency: \"\",\n    date_added_from: \"\",\n    date_added_to: \"\",\n  });\n\n  const handleFilterChange = React.useCallback((e) => {\n    setFilters((filters) => ({ ...filters, [e.target.name]: e.target.value }));\n  }, []);\n\n  const [selectedRows, setSelectedRows] = React.useState([]);\n\n  const handleGetIsChecked = React.useCallback(\n    (id) => selectedRows.findIndex((_id) => _id === id) !== -1,\n    [selectedRows]\n  );\n\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const openModal = React.useCallback(() => setModalOpen(true), []);\n  const closeModal = React.useCallback(() => setModalOpen(false), []);\n\n  const handleRemove = React.useCallback(() => {\n    selectedRows.map((id) => dispatch(conversionsActions.removeRow(id)));\n    setSelectedRows([]);\n  }, [dispatch, selectedRows]);\n\n  const handleDataChange = React.useCallback(\n    (id, e) => {\n      const column = e.target.name;\n\n      if (column === \"selected\") {\n        setSelectedRows((selectedRows) => {\n          const isFound =\n            selectedRows.findIndex((rowId) => rowId === id) !== -1;\n\n          if (isFound) {\n            return selectedRows.filter((rowId) => rowId !== id);\n          } else {\n            return [...selectedRows, id];\n          }\n        });\n\n        return;\n      }\n\n      dispatch(\n        conversionsActions.updateRow({\n          id,\n          data: {\n            [column]: e.target.value,\n          },\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const handleSave = React.useCallback(async () => {\n    const result = await dispatch(saveConversions());\n\n    console.log(result);\n  }, [dispatch]);\n\n  const updatedRows = useSelector(updatedConversionsSelector);\n\n  const hasChanges = updatedRows.length > 0;\n\n  return (\n    <>\n      <Filters data={filters} onChange={handleFilterChange} />\n      <DataTable\n        filters={filters}\n        getIsChecked={handleGetIsChecked}\n        onChange={handleDataChange}\n      />\n      {modalOpen && <AddCalculationModal onClose={closeModal} />}\n\n      <Box p={2} mt={2} clone>\n        <Paper>\n          <Grid container justify=\"space-between\">\n            <Grid item>\n              <Button\n                onClick={handleRemove}\n                disabled={selectedRows.length === 0}\n              >\n                Удалить выбранные\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button onClick={openModal} color=\"primary\">\n                Добавить расчёт\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button onClick={handleSave} disabled={!hasChanges}>\n                Сохранить изменения\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\nexport default CurrenciesView;\n","import { Provider } from \"react-redux\";\nimport { Container, CssBaseline } from \"@material-ui/core\";\nimport store from \"./store\";\nimport Currencies from \"./Currencies\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <CssBaseline />\n      <Container>\n        <Currencies />\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { default as App } from \"./App\";\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}